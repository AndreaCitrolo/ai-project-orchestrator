#!/usr/bin/env claude-command
# Close Initiative
# Usage: close-initiative [initiative-dir]

## VALIDATE COMPLETION

Read `initiatives/[initiative-dir]/tasks.prd`

MUST verify ALL tasks marked `[x]`:
IF any task `[ ]`: STOP. Output: "❌ Tasks incomplete"

## UPDATE project-state.prd

1. Read description.prd → identify new/modified modules
2. Update/add modules to project-state.prd

For NEW modules:
```markdown
### Module: [Name]

**Summary**: [1-2 sentences]
**Key Decisions**: [List]
**Acceptance Criteria**: [From initiative]
**Tech Stack**: [Technologies]
**Interfaces**: [APIs, endpoints, etc]
**Dependencies**: [Other modules]
**Status**: ✅ Implemented
```

For MODIFIED modules:
- Update relevant sections
- Add to Key Decisions
- Mark criteria as complete

MUST keep modules <500 tokens.

## UPDATE: status.prd

```markdown
**Status**: completed
**Completed**: [YYYY-MM-DD]

Final Progress: N/N tasks (100%)
```

## RENAME DIRECTORY

From: `initiatives/[NNNN]-active-[name]`
To: `initiatives/[NNNN]-completed-[name]`

## UPDATE: INDEX.prd

Move entry from Active → Completed section:
```
| NNNN | [name] | [YYYY-MM-DD] | [duration] | [key outcomes] |
```

## CHECK DEPENDENT INITIATIVES

Scan INDEX.prd for initiatives with dependencies on this one.
IF found: Update their status from "blocked" to "planned"

## VALIDATION

MUST verify:
- [ ] All tasks `[x]`
- [ ] project-state.prd updated
- [ ] Directory renamed to completed
- [ ] INDEX.prd updated
- [ ] Dependent initiatives unblocked
- [ ] Module token count <500

## OUTPUT

```
Initiative [NNNN]: CLOSED
Modules updated: [list]
Unblocked: [list or "None"]
```
